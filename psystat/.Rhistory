fit = lm(pulse ~ weight + drug)
abline(a=coef(fit)[1], b=coef(fit)[2], lwd=2, col="lightblue")
abline(a=coef(fit)[1]+coef(fit)[3], b=coef(fit)[2], lwd=2, col="salmon")
# compute and plot "adjusted" means
adjPulse = pulse - 0.4885*(weight-mean(weight))
plot(adjPulse ~ weight, type="n", bty="n", xlab="Drug", ylab="Adjusted pulse")
points(adjPulse[1:9] ~ weight[1:9], pch=21, bg="lightblue", cex=1.5)
points(adjPulse[10:18] ~ weight[10:18], pch=21, bg="salmon", cex=1.5)
abline(h=mean(adjPulse[1:9]), lty=2, lwd=2, col="lightblue")
abline(h=mean(adjPulse[10:18]), lty=2, lwd=2, col="salmon")
# see the adjusted means
mean(adjPulse[1:9])
mean(adjPulse[10:18])
# perform ANCOVA
model2 = aov(pulse ~ weight + drug)
summary(model2)
Y = c(7,10.5,13,14.5, 7.5,11,13.5,15)
X = c(1,2,3,4,0,1,2,3)
Y = c(7,10.5,13,14.5, 7.5,11,13.5,15)
X = c(1,2,3,4,0,1,2,3)
group = as.factor(c(1,1,1,1,2,2,2,2))
# what about
plot(Y ~ X, type="n", bty="n", xlab="X", ylab="Y", ylim=c(0,20))
points(quiz[1:6] ~ aptitude[1:6], pch=21, bg="blue", cex=1.5)
points(Y[1:4] ~ X[1:4], pch=21, bg="blue", cex=1.5)
points(Y[5:8] ~ X[5:8], pch=21, bg="salmon", cex=1.5)
abline(h=mean(Y[1:4]), lty=2, lwd=2, col="blue")
abline(h=mean(Y[5:8]), lty=2, lwd=2, col="salmon")
# plot separate regression lines by class
fit = lm(Y ~ X + group)
abline(a=coef(fit)[1], b=coef(fit)[2], lwd=2, col="blue")
abline(a=coef(fit)[1]+coef(fit)[3], b=coef(fit)[2], lwd=2, col="salmon")
shiny::runApp('github/statShinyApps/psystat')
runApp()
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
fluidRow(
# input goes here
column(4,
# style = "background-color: #E8E8E8",
##change the title here
div(helpText('Bayes factor: t-tests'), align = "left", style="font-size:140%"),
br(),
radioButtons(inputId = "design",
label = "Design:",
choiceNames = c("Single/paired sample(s)",
"Independent samples"),
choiceValues = c("single",
"independent"),
selected = "single"
),
radioButtons(inputId = "direction",
label = "Predicted direction:",
choiceNames = c("None",
"Positive effect",
"Negative effect"),
choiceValues = c("none", "positive", "negative"),
selected = "none"
),
numericInput(inputId = "t",
label = "t-statistic:",
value = 0,
min = -1e5,
max = 1e5,
step=0.1
),
uiOutput("sample1"),
uiOutput("sample2"),
numericInput(inputId = "pH0",
label = "Prior probability of null:",
value=0.5,
min=0,
max=1,
step=0.1
),
), # close column 1
# output goes here
column(8,
tabPanel("Summary",
div(helpText('Model definitions:'), align = "left", style="font-size:140%"),
div(withMathJax(sprintf('\\(\\mathcal{H}_0\\): effect size is 0')), style="font-size:130%"),
div(uiOutput("altText"), style="font-size:130%"),
br(),
div(helpText('Predictive adequacy:'), align = "left", style="font-size:140%"),
plotOutput("pizza"),
div(helpText('Bayes factors:'), style="font-size:140%"),
div(uiOutput("bfText"), align = "left", style="font-size:130%;"),
div(uiOutput("description"), align = "left", style="font-size:130%"),
br(),
div(helpText('Posterior probabilities:'), style="font-size:140%"),
div(uiOutput("postNull"), align = "left", style="font-size:130%;"),
div(uiOutput("postAlt"), align = "left", style="font-size:130%")
) # close tabset panel
) # close column
) # close fluid row
runApp('github/statShinyApps/psystat')
shiny::runApp('github/statShinyApps/psystat')
?HTML
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/unequalVariances')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
fluidRow(
# input goes here
column(4,
# style = "background-color: #E8E8E8",
##change the title here
div(helpText('Bayes factor: t-tests'), align = "left", style="font-size:140%"),
br(),
radioButtons(inputId = "design",
label = "Design:",
choiceNames = c("Single/paired sample(s)",
"Independent samples"),
choiceValues = c("single",
"independent"),
selected = "single"
),
radioButtons(inputId = "direction",
label = "Predicted direction:",
choiceNames = c("None",
"Positive effect",
"Negative effect"),
choiceValues = c("none", "positive", "negative"),
selected = "none"
),
numericInput(inputId = "t",
label = "t-statistic:",
value = 0,
min = -1e5,
max = 1e5,
step=0.1
),
uiOutput("sample1"),
uiOutput("sample2"),
numericInput(inputId = "pH0",
label = "Prior probability of null:",
value=0.5,
min=0,
max=1,
step=0.1
),
), # close column 1
# output goes here
column(8,
tabPanel("Summary",
div(helpText('Model definitions:'), align = "left", style="font-size:140%"),
div(withMathJax(sprintf('\\(\\mathcal{H}_0\\): effect size is 0')), style="font-size:130%"),
div(uiOutput("altText"), style="font-size:130%"),
br(),
div(helpText('Predictive adequacy:'), align = "left", style="font-size:140%"),
plotOutput("pizza"),
div(helpText('Bayes factors:'), style="font-size:140%"),
div(uiOutput("bfText"), align = "left", style="font-size:130%;"),
div(uiOutput("description"), align = "left", style="font-size:130%"),
br(),
div(helpText('Posterior probabilities:'), style="font-size:140%"),
div(uiOutput("postNull"), align = "left", style="font-size:130%;"),
div(uiOutput("postAlt"), align = "left", style="font-size:130%")
) # close tabset panel
) # close column
) # close fluid row
shiny::runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
shiny::runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
fluidRow(
# input goes here
column(4,
# style = "background-color: #E8E8E8",
##change the title here
div(helpText('Bayes factor: t-tests'), align = "left", style="font-size:140%"),
br(),
radioButtons(inputId = "Tdesign",
label = "Design:",
choiceNames = c("Single/paired sample(s)",
"Independent samples"),
choiceValues = c("single",
"independent"),
selected = "single"
),
radioButtons(inputId = "direction",
label = "Predicted direction:",
choiceNames = c("None",
"Positive effect",
"Negative effect"),
choiceValues = c("none", "positive", "negative"),
selected = "none"
),
numericInput(inputId = "t",
label = "t-statistic:",
value = 0,
min = -1e5,
max = 1e5,
step=0.1
),
uiOutput("sample1"),
uiOutput("sample2"),
numericInput(inputId = "pH0",
label = "Prior probability of null:",
value=0.5,
min=0,
max=1,
step=0.1
)
#submitButton("Calculate")
), # close column 1
# output goes here
column(8,
tabPanel("Summary",
div(helpText('Model definitions:'), align = "left", style="font-size:140%"),
div(withMathJax(sprintf('\\(\\mathcal{H}_0\\): effect size is 0')), style="font-size:130%"),
div(uiOutput("altText"), style="font-size:130%"),
br(),
div(helpText('Predictive adequacy:'), align = "left", style="font-size:140%"),
plotOutput("pizza"),
div(helpText('Bayes factors:'), style="font-size:140%"),
div(uiOutput("bfText"), align = "left", style="font-size:130%;"),
div(uiOutput("description"), align = "left", style="font-size:130%"),
br(),
div(helpText('Posterior probabilities:'), style="font-size:140%"),
div(uiOutput("postNull"), align = "left", style="font-size:130%;"),
div(uiOutput("postAlt"), align = "left", style="font-size:130%")
) # close tabset panel
) # close column
) # close fluid row
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp()
runApp('github/statShinyApps/psystat')
runApp()
runApp('github/statShinyApps/psystat')
fluidRow(
# input goes here
column(4,
# style = "background-color: #E8E8E8",
##change the title here
div(helpText('Bayes factor calculator'), align = "left", style="font-size:140%"),
br(),
radioButtons(inputId = "test",
label = "Test",
choiceNames = c("t-test",
"ANOVA"),
choiceValues = c("ttest",
"anova"),
selected = "ttest"
),
uiOutput("design"),
radioButtons(inputId = "direction",
label = "Predicted direction:",
choiceNames = c("None",
"Positive effect",
"Negative effect"),
choiceValues = c("none", "positive", "negative"),
selected = "none"
),
numericInput(inputId = "t",
label = "t-statistic:",
value = 0,
min = -1e5,
max = 1e5,
step=0.1
),
uiOutput("sample1"),
uiOutput("sample2"),
numericInput(inputId = "pH0",
label = "Prior probability of null:",
value=0.5,
min=0,
max=1,
step=0.1
)
#submitButton("Calculate")
), # close column 1
# output goes here
column(8,
tabPanel("Summary",
div(helpText('Model definitions:'), align = "left", style="font-size:140%"),
div(withMathJax(sprintf('\\(\\mathcal{H}_0\\): effect size is 0')), style="font-size:130%"),
div(uiOutput("altText"), style="font-size:130%"),
br(),
div(helpText('Predictive adequacy:'), align = "left", style="font-size:140%"),
plotOutput("pizza"),
div(helpText('Bayes factors:'), style="font-size:140%"),
div(uiOutput("bfText"), align = "left", style="font-size:130%;"),
div(uiOutput("description"), align = "left", style="font-size:130%"),
br(),
div(helpText('Posterior probabilities:'), style="font-size:140%"),
div(uiOutput("postNull"), align = "left", style="font-size:130%;"),
div(uiOutput("postAlt"), align = "left", style="font-size:130%")
) # close tabset panel
) # close column
) # close fluid row
runApp('github/statShinyApps/psystat')
runApp()
runApp('github/statShinyApps/psystat')
runApp()
runApp('github/statShinyApps/psystat')
fluidRow(
# input goes here
column(4,
# style = "background-color: #E8E8E8",
##change the title here
div(helpText('Bayes factor calculator'), align = "left", style="font-size:140%"),
br(),
radioButtons(inputId = "design",
label = "Design:",
choiceNames = c("Single sample t-test",
"Independent samples t-test",
"Between subjects ANOVA",
"Repeated measures ANOVA"),
choiceValues = c("single",
"independent",
"between",
"repeated"),
selected = "single"
),
uiOutput("direction"),
numericInput(inputId = "t",
label = "t-statistic:",
value = 0,
min = -1e5,
max = 1e5,
step=0.1
),
uiOutput("sample1"),
uiOutput("sample2"),
numericInput(inputId = "pH0",
label = "Prior probability of null:",
value=0.5,
min=0,
max=1,
step=0.1
)
#submitButton("Calculate")
), # close column 1
# output goes here
column(8,
tabPanel("Summary",
div(helpText('Model definitions:'), align = "left", style="font-size:140%"),
div(withMathJax(sprintf('\\(\\mathcal{H}_0\\): effect size is 0')), style="font-size:130%"),
div(uiOutput("altText"), style="font-size:130%"),
br(),
div(helpText('Predictive adequacy:'), align = "left", style="font-size:140%"),
plotOutput("pizza"),
div(helpText('Bayes factors:'), style="font-size:140%"),
div(uiOutput("bfText"), align = "left", style="font-size:130%;"),
div(uiOutput("description"), align = "left", style="font-size:130%"),
br(),
div(helpText('Posterior probabilities:'), style="font-size:140%"),
div(uiOutput("postNull"), align = "left", style="font-size:130%;"),
div(uiOutput("postAlt"), align = "left", style="font-size:130%")
) # close tabset panel
) # close column
) # close fluid row
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
fluidRow(
# input goes here
column(4,
# style = "background-color: #E8E8E8",
##change the title here
div(helpText('Bayes factor calculator'), align = "left", style="font-size:140%"),
br(),
radioButtons(inputId = "design",
label = "Design:",
choiceNames = c("Single sample t-test",
"Independent samples t-test",
"Between subjects ANOVA",
"Repeated measures ANOVA"),
choiceValues = c("single",
"independent",
"between",
"repeated"),
selected = "single"
),
radioButtons(inputId = "direction",
label = "Predicted direction:",
choiceNames = c("None",
"Positive effect",
"Negative effect"),
choiceValues = c("none", "positive", "negative"),
selected = "none"
),
numericInput(inputId = "t",
label = "t-statistic:",
value = 0,
min = -1e5,
max = 1e5,
step=0.1
),
uiOutput("sample1"),
uiOutput("sample2"),
numericInput(inputId = "pH0",
label = "Prior probability of null:",
value=0.5,
min=0,
max=1,
step=0.1
)
#submitButton("Calculate")
), # close column 1
# output goes here
column(8,
tabPanel("Summary",
div(helpText('Model definitions:'), align = "left", style="font-size:140%"),
div(withMathJax(sprintf('\\(\\mathcal{H}_0\\): effect size is 0')), style="font-size:130%"),
div(uiOutput("altText"), style="font-size:130%"),
br(),
div(helpText('Predictive adequacy:'), align = "left", style="font-size:140%"),
plotOutput("pizza"),
div(helpText('Bayes factors:'), style="font-size:140%"),
div(uiOutput("bfText"), align = "left", style="font-size:130%;"),
div(uiOutput("description"), align = "left", style="font-size:130%"),
br(),
div(helpText('Posterior probabilities:'), style="font-size:140%"),
div(uiOutput("postNull"), align = "left", style="font-size:130%;"),
div(uiOutput("postAlt"), align = "left", style="font-size:130%")
) # close tabset panel
) # close column
) # close fluid row
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
runApp('github/statShinyApps/psystat')
shiny::runApp('github/statShinyApps/psystat')
shiny::runApp('github/statShinyApps/psystat')
shiny::runApp('github/statShinyApps/psystat')
shiny::runApp('github/statShinyApps/psystat')
fluidRow(
# input goes here
column(4,
##change the title here
div(helpText('Bayes factor calculator'), align = "left", style="font-size:140%"),
br(),
radioButtons(inputId = "test",
label = "Test:",
choiceNames = c("t-test",
"ANOVA"),
choiceValues = c("ttest",
"anova"),
selected = "ttest"
),
radioButtons(inputId = "design",
label = "Design:",
choiceNames = c("Single sample",
"Independent samples"),
choiceValues = c("single",
"independent"),
selected = "single"
),
radioButtons(inputId = "direction",
label = "Predicted direction:",
choiceNames = c("None",
"Positive effect",
"Negative effect"),
choiceValues = c("none", "positive", "negative"),
selected = "none"
),
uiOutput("statistic"),
uiOutput("sample1"),
uiOutput("sample2"),
numericInput(inputId = "pH0",
label = "Prior probability of null:",
value=0.5,
min=0,
max=1,
step=0.1
)
#submitButton("Calculate")
), # close column 1
# output goes here
column(8,
tabPanel("Summary",
div(helpText('Model definitions:'), align = "left", style="font-size:140%"),
div(uiOutput("nullText"), style="font-size:130%"),
div(uiOutput("altText"), style="font-size:130%"),
br(),
div(helpText('Predictive adequacy:'), align = "left", style="font-size:140%"),
plotOutput("pizza"),
div(helpText('Bayes factors:'), style="font-size:140%"),
div(uiOutput("bfText"), align = "left", style="font-size:130%;"),
div(uiOutput("description"), align = "left", style="font-size:130%"),
br(),
div(helpText('Posterior probabilities:'), style="font-size:140%"),
div(uiOutput("postNull"), align = "left", style="font-size:130%;"),
div(uiOutput("postAlt"), align = "left", style="font-size:130%")
) # close tabset panel
) # close column
) # close fluid row
runApp('github/statShinyApps/psystat')
library(foreign)
?foreign
dat = read.mtp("~/Downloads/JobApplicants.MTW")
shiny::runApp('github/statShinyApps/psystat')
shiny::runApp()
runApp()
runApp()
runApp()
